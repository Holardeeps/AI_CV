import Navbar from "~/components/Navbar";
import type { Route } from "./+types/home";
// import { resumes } from "../../constants";
import ResumeCard from "~/components/ResumeCard";
import { usePuterStore } from "~/lib/puter";
import {  Link, useNavigate } from "react-router";
import { useEffect, useState } from 'react';

export function meta({}: Route.MetaArgs) {
  return [
    { title: "Resume_HD" },
    { name: "description", content: "Smart feedback for your dream job!" },
  ];
}

export default function Home() {
  const { auth, kv } = usePuterStore();
  const navigate = useNavigate();
  const [resumes, setResumes] = useState<Resume[]>([]);
  const [loadingResumes, setLoadingResumes] = useState(false);
  

  useEffect(() => {
    if(!auth.isAuthenticated) navigate('/auth?next=/')
  }, [auth.isAuthenticated]);

  useEffect(() => {
    const loadResumes = async () => {
      setLoadingResumes(true);
      const resumes = (await kv.list('resume:*', true)) as KVItem[];
      console.log(resumes[0].value)

      const parsedResumes = resumes?.map((resume) => (
        JSON.parse(resume.value) as Resume
      ));

      console.log(parsedResumes[0].imagePath)
      setResumes(parsedResumes);
      setLoadingResumes(false);
    }

    loadResumes();
    
  }, []);

  
  return <main className="bg-[url('/images/bg-main.svg')] bg-cover">
    <Navbar />
    <section className="main-section">
      <div className="page-heading py-12">
        <h1>Track Your Applications & Resume Ratings</h1>
        {
          !loadingResumes && resumes.length === 0 ? (
            <h2>No resumes found . Upload your first resume to get feedback.</h2>
          ): (
            <h2>Review your submissions and check AI-powered feedback.</h2>
          )
        }        
      </div>

      {
        loadingResumes && (
          <div className="flex flex-col items-center justify-center">
            <img src="/images/resume-scan-2.gif" alt="scanner" className="w-[200px]" />
          </div>
        )
      }

      {resumes.length > 0 && (
        <div className="resumes-section">
          
          {
            resumes.map((resume) => (
              <div className="">
                <div className="bg-red-500 pt-8">this is the image {resume.imagePath ? 'looks' : "undefined"}</div>
              <ResumeCard key={resume.id} resume={resume} />
              </div>
            ))
          }
          {
            <div className="flex flex-col items-center justify-center mt-10 gap-4">
              <Link to={'/wipe'} className="primary-button w-fit text-xl font-semibold">
                Wipe Data
              </Link>
            </div>
          }

          
        </div>
      )}
      {
        !loadingResumes && resumes.length === 0 && (
          <div className="flex flex-col items-center justify-center mt-10 gap-4">
            <Link to={'/upload'} className="primary-button w-fit text-xl font-semibold">
              Upload Resume
            </Link>
          </div>
        )
      }
    </section>

  </main>
}
